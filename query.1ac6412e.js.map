{"version":3,"sources":["pages/components.ts","data/meta.json","data/config.ts","pages/query.ts"],"names":["module","exports","division","searchBy","s","p","batch","province"],"mappings":"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","file":"query.1ac6412e.js","sourceRoot":"../source","sourcesContent":["const spawn = document.createElement(\"template\");\n\nexport function parseDOM(raw: string) {\n  spawn.innerHTML = raw;\n\n  return spawn.content;\n}\n\nexport interface Props {\n  className?: string;\n  id?: string;\n  title?: string;\n  children?: string;\n}\n\nexport interface FieldProps {\n  name?: string;\n  defaultValue?: string;\n}\n\nexport function createRenderer<T = any>(template: string) {\n  return new Function(\"props\", `with (props) return \\`${template}\\`;`) as (\n    props: T & Props\n  ) => string;\n}\n\nexport const SelectField = createRenderer<FieldProps & { label?: string }>(\n  document.querySelector(\"#select-field\").innerHTML\n);\n","module.exports={division:[\"文科\",\"理科\",\"综合\"],searchBy:{s:\"按分数\",p:\"按位次\"},batch:[\"本科一批\",\"本科批\",\"本科一批A段\",\"平行录取一段\",\"本科二批\",\"本科一批B段\",\"零志愿批次\",\"平行录取二段\",\"专科批\",\"本科二批A段\",\"本科二批B段\",\"平行录取三段\",\"本科三批\",\"本科二批C段\",\"本科三批A段\",\"本科批A段\",\"国家专项计划本科批\",\"地方专项计划本科批\",\"本科提前批\",\"普通类提前批\",\"专科提前批\",\"本科综合评价批\",\"高校专项计划本科批\",\"本科批B段\",\"无批次\",\"少数民族预科班\",\"专科批A段\",\"本科一批A1段\"],province:[\"内蒙古\",\"辽宁\",\"吉林\",\"黑龙江\",\"上海\",\"江苏\",\"浙江\",\"安徽\",\"福建\",\"江西\",\"山东\",\"河南\",\"湖北\",\"湖南\",\"广西\",\"海南\",\"重庆\",\"四川\",\"贵州\",\"云南\",\"陕西\",\"甘肃\",\"青海\",\"宁夏\",\"新疆\",\"北京\",\"天津\",\"河北\",\"山西\",\"广东\",\"西藏\",\"香港\",\"台湾\",\"澳门\"]};","export interface Major {\n  college: string;\n  major: string;\n  batch: string;\n  division: string;\n  score: number;\n  position: number;\n  dimension?: string;\n  percent?: number;\n  [key: string]: any;\n}\n\nexport const userID =\n  localStorage.userID ||\n  (localStorage.userID = Math.round(Math.random() * 2 ** 48).toString(16));\n\nexport const baseURL = \"https://stone.sou.ac.cn/release/CEE/\";\n\nexport function ping(path = \"\") {\n  document.querySelector(\"#ping\")?.remove();\n\n  const script = document.createElement(\"script\");\n\n  return new Promise((resolve, reject) => {\n    script.id = \"ping\";\n    script.onload = resolve;\n    script.onerror = reject;\n    script.src =\n      new URL(\n        path,\n        `https://service-806yjs9u-1251042283.gz.apigw.tencentcs.com/release/log/${userID}/`\n      ) + \"\";\n\n    document.head.append(script);\n  });\n}\n","import { parseDOM, SelectField, createRenderer } from \"./components\";\nimport { province, division, searchBy } from \"../data/meta.json\";\nimport { Major, ping, baseURL } from \"../data/config\";\n/**\n * 渲染表单项\n */\nconst { 0: queryForm, 1: filterForm } = document.forms;\n\nqueryForm.prepend(\n  parseDOM(`\n    ${SelectField({\n      className: \"col-6 col-sm-4\",\n      id: \"province\",\n      name: \"province\",\n      label: \"省份\",\n      children: province\n        .map((name, index) => `<option value=\"${index}\">${name}</option>`)\n        .join(\"\"),\n    })}\n\n    ${SelectField({\n      className: \"col-6 col-sm-4\",\n      id: \"division\",\n      name: \"division\",\n      label: \"分科\",\n      children: division\n        .map((text, index) => `<option value=\"${index}\">${text}</option>`)\n        .join(\"\"),\n    })}\n\n    ${SelectField({\n      className: \"col-6 col-sm-4\",\n      id: \"search_by\",\n      name: \"search_by\",\n      label: \"查询方式\",\n      children: Object.entries(searchBy)\n        .map(([value, name]) => `<option value=\"${value}\">${name}</option>`)\n        .join(\"\"),\n    })}\n`)\n);\n/**\n * 分数、位次切换\n */\nconst resultBox = document.querySelector(\"body > main\"),\n  scoreInput = document.querySelector<HTMLInputElement>(\"#score\"),\n  positionInput = document.querySelector<HTMLInputElement>(\"#position\");\n\nfunction switchMode(type: string) {\n  if (type === \"s\") {\n    scoreInput.disabled = scoreInput.parentElement.hidden = false;\n    positionInput.disabled = positionInput.parentElement.hidden = true;\n  } else {\n    scoreInput.disabled = scoreInput.parentElement.hidden = true;\n    positionInput.disabled = positionInput.parentElement.hidden = false;\n  }\n  filterForm.hidden = true;\n  resultBox.innerHTML = \"\";\n}\n\ndocument.querySelector<HTMLSelectElement>(\"#search_by\").onchange = ({\n  target,\n}) => switchMode((target as HTMLSelectElement).value);\n/**\n * 输入缓存\n */\nfor (const input of queryForm.elements) {\n  const { name } = input as HTMLInputElement;\n  const value = self.localStorage[name];\n\n  if (!value) continue;\n\n  (input as HTMLInputElement).value = value;\n\n  if (name === \"search_by\") switchMode(value);\n}\n\nqueryForm.onchange = ({ target }) => {\n  const { name, value } = target as HTMLInputElement;\n\n  self.localStorage[name] = value;\n};\n/**\n * 查询、渲染数据\n */\nconst ResultCard = createRenderer<Major>(\n  resultBox.nextElementSibling.innerHTML\n);\n\nvar data: Major[] = [];\n\nfunction renderAll() {\n  resultBox.innerHTML = data.map(ResultCard).join(\"\");\n}\n\nqueryForm.onsubmit = async (event) => {\n  event.preventDefault();\n\n  const {\n      province,\n      division,\n      percent,\n      score,\n      position,\n      search_by,\n    } = Object.fromEntries(\n      Array.from(\n        queryForm.elements,\n        ({ name, disabled, value }: HTMLInputElement) => [\n          name,\n          !disabled && value,\n        ]\n      )\n    ),\n    button = queryForm.querySelector(\"button\");\n\n  const path = [\n    province,\n    division,\n    percent,\n    score || position,\n    search_by,\n    self.localStorage.moreData == 1 ? \"list.js\" : \"data.js\",\n  ].join(\"/\");\n\n  ping(path);\n\n  button.disabled = true;\n\n  const response = await fetch(new URL(path, baseURL) + \"\");\n\n  const list: Major[] = await response.json(),\n    scoreKey: string = search_by + percent;\n\n  const two_columns = +percent !== 50;\n\n  data = list\n    .map(\n      ({ [scoreKey]: score, s50, p50, ...rest }) =>\n        ({\n          score: two_columns ? s50 || p50 : score,\n          position: two_columns ? score : \"\",\n          dimension: searchBy[search_by].slice(1),\n          percent: +percent,\n          ...rest,\n        } as Major)\n    )\n    .sort(({ position: A, score: C }, { position: B, score: D }) =>\n      search_by === \"s\" ? B - A || D - C : A - B || C - D\n    );\n\n  renderAll();\n\n  button.disabled = filterForm.hidden = false;\n  (filterForm.elements[0] as HTMLInputElement).value = \"\";\n};\n/**\n * 筛选数据\n */\nconst inAttr = /^[^<]*>/;\n\nfilterForm.onsubmit = (event) => {\n  event.preventDefault();\n\n  const { value } = (event.target as HTMLFormElement)\n    .elements[0] as HTMLInputElement;\n\n  if (!value.trim()) return renderAll();\n\n  const keywords = new RegExp(value.replace(/\\s+/g, \"|\"), \"g\");\n\n  resultBox.innerHTML = data\n    .filter(({ college, major }) => keywords.test(`${college} ${major}`))\n    .map((item) =>\n      ResultCard(item).replace(keywords, (match, offset: number, raw: string) =>\n        inAttr.test(raw.slice(offset))\n          ? match\n          : `<span class=\"text-danger\">${match}</span>`\n      )\n    )\n    .join(\"\");\n};\n"]}